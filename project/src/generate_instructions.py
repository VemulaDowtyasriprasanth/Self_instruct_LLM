import os
import requests
import json
from file_loader import load_php_snippets


def generate_debugging_instructions(vulnerable_code, secure_code, model_url):
    """
    Generate debugging instructions to convert vulnerable code into secure code.

    Args:
        vulnerable_code (str): The vulnerable PHP code snippet.
        secure_code (str): The secure PHP code snippet.
        model_url (str): The URL of the LLM API.

    Returns:
        str: Debugging instructions generated by the LLM.
    """
    prompt = f"""
    I am analyzing PHP code for security vulnerabilities. Below is a vulnerable code snippet and a secure version:
    
    Vulnerable Code:
    {vulnerable_code}

    Secure Code:
    {secure_code}

    Task: Provide step-by-step debugging instructions to convert the vulnerable code into the secure version.
    """
    response = requests.post(
        model_url,
        headers={"Content-Type": "application/json"},
        json={"model": "llama2", "prompt": prompt, "stream": False}
    )
    return response.json().get("response", "No response received.")


if __name__ == "__main__":
    # Define the model URL
    model_url = "http://localhost:11434/api/generate"

    # Load PHP snippets
    base_path = os.path.join(os.path.dirname(__file__), "../data")  # Correctly resolves the relative path
    snippets = load_php_snippets(base_path)

    # Use the first secure and vulnerable files for generating instructions
    vulnerable_code = snippets["vulnerable"][0]["content"]
    secure_code = snippets["secure"][0]["content"]

    # Generate debugging instructions
    instructions = generate_debugging_instructions(vulnerable_code, secure_code, model_url)

    # Save the debugging instructions to a file
    output_file = os.path.join(os.path.dirname(__file__), "../debugging_instructions.txt")
    with open(output_file, "w") as file:
        file.write("Debugging Instructions:\n")
        file.write(instructions)
    
    print(f"Debugging instructions saved to: {output_file}")
